plugins {
    id 'maven-publish'
    id 'com.enonic.defaults' version "2.0.1"
    id 'com.enonic.xp.app' version '3.1.0'
    id "com.github.node-gradle.node" version '3.1.1'
}

app {
    name = "${appName}"
    displayName = "${appDisplayName}"
    vendorName = "${vendorName}"
    vendorUrl = "${vendorUrl}"
    systemVersion = "${xpVersion}"
}

dependencies {
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-admin:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.lib:lib-thymeleaf:2.0.1"
}

repositories {
    mavenLocal() //Local dev
    mavenCentral()
    xp.enonicRepo('dev')
}

node {
    download = true
    version = '17.2.0'
    npmVersion = '8.1.4'
}

def nodeEnvironment() {
    def environments = [ prod : 'production', dev: 'development' ]
    def nodeEnv = environments[hasProperty( 'env' ) ? env : 'prod']
    return nodeEnv != null ? nodeEnv : 'production'
}

task lint( type: NpmTask, dependsOn: npmInstall ) {
    description = 'Linting Application.'
    args = [ 'run', 'lint' ]
    inputs.dir 'src/main/resources/admin/tools/vue'
    outputs.dir file('gradle')
    outputs.upToDateWhen { false }
}

task tests( type: NpmTask, dependsOn: [npmInstall, lint] ) {
    description = 'Testing Application.'
    args = [ 'run', 'test' ]
    inputs.dir 'src/main/resources/admin/tools/vue/'
    outputs.dir file('gradle')
    outputs.upToDateWhen { false }
}

task webpack( type: NpmTask, dependsOn: [npmInstall, lint, tests] ) {
    description = 'Building Application.'
    environment = [ 'NODE_ENV': nodeEnvironment() ]
    args = [ 'run', 'build' ]
    inputs.dir 'src/main/resources/admin/tools/vue'
    inputs.file 'webpack.config.js'
    inputs.file 'tsconfig.json'
    inputs.file 'build.gradle'
    inputs.file 'package.json'
    outputs.dir "src/main/resources/assets/js"
    outputs.upToDateWhen { false }
}

jar {
    dependsOn += webpack
}
